// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ElectionCreated extends ethereum.Event {
  get params(): ElectionCreated__Params {
    return new ElectionCreated__Params(this);
  }
}

export class ElectionCreated__Params {
  _event: ElectionCreated;

  constructor(event: ElectionCreated) {
    this._event = event;
  }

  get electionID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get startTime(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get endTime(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get registerId(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get authProviderId(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get svsId(): i32 {
    return this._event.parameters[5].value.toI32();
  }

  get ballotLength(): i32 {
    return this._event.parameters[6].value.toI32();
  }

  get descriptionIPFSHash(): string {
    return this._event.parameters[7].value.toString();
  }

  get ballotIPFSHash(): string {
    return this._event.parameters[8].value.toString();
  }
}

export class ElectionRegisterKeySet extends ethereum.Event {
  get params(): ElectionRegisterKeySet__Params {
    return new ElectionRegisterKeySet__Params(this);
  }
}

export class ElectionRegisterKeySet__Params {
  _event: ElectionRegisterKeySet;

  constructor(event: ElectionRegisterKeySet) {
    this._event = event;
  }

  get electionID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get registerKey(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class ElectionResultsPublished extends ethereum.Event {
  get params(): ElectionResultsPublished__Params {
    return new ElectionResultsPublished__Params(this);
  }
}

export class ElectionResultsPublished__Params {
  _event: ElectionResultsPublished;

  constructor(event: ElectionResultsPublished) {
    this._event = event;
  }

  get electionID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get privateKey(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get yesVotes(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }

  get noVotes(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get invalidVotes(): Array<BigInt> {
    return this._event.parameters[4].value.toBigIntArray();
  }
}

export class ElectionStatusChanged extends ethereum.Event {
  get params(): ElectionStatusChanged__Params {
    return new ElectionStatusChanged__Params(this);
  }
}

export class ElectionStatusChanged__Params {
  _event: ElectionStatusChanged;

  constructor(event: ElectionStatusChanged) {
    this._event = event;
  }

  get electionID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get oldStatus(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get newStatus(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get cancelReasonIPFS(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class VoteCast extends ethereum.Event {
  get params(): VoteCast__Params {
    return new VoteCast__Params(this);
  }
}

export class VoteCast__Params {
  _event: VoteCast;

  constructor(event: VoteCast) {
    this._event = event;
  }

  get electionID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get voter(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get svsSignature(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get vote_encrypted(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get unblindedElectionToken(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }

  get unblindedSignature(): Bytes {
    return this._event.parameters[5].value.toBytes();
  }
}

export class VoteUpdated extends ethereum.Event {
  get params(): VoteUpdated__Params {
    return new VoteUpdated__Params(this);
  }
}

export class VoteUpdated__Params {
  _event: VoteUpdated;

  constructor(event: VoteUpdated) {
    this._event = event;
  }

  get electionID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get voter(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get vote_encrypted(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class VoterAuthorized extends ethereum.Event {
  get params(): VoterAuthorized__Params {
    return new VoterAuthorized__Params(this);
  }
}

export class VoterAuthorized__Params {
  _event: VoterAuthorized;

  constructor(event: VoterAuthorized) {
    this._event = event;
  }

  get electionID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get voterID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get apID(): i32 {
    return this._event.parameters[2].value.toI32();
  }
}

export class VoterRegistered extends ethereum.Event {
  get params(): VoterRegistered__Params {
    return new VoterRegistered__Params(this);
  }
}

export class VoterRegistered__Params {
  _event: VoterRegistered;

  constructor(event: VoterRegistered) {
    this._event = event;
  }

  get electionID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get voterID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get registerID(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get blindedSignature(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get blindedElectionToken(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }
}

export class VotersAuthorized extends ethereum.Event {
  get params(): VotersAuthorized__Params {
    return new VotersAuthorized__Params(this);
  }
}

export class VotersAuthorized__Params {
  _event: VotersAuthorized;

  constructor(event: VotersAuthorized) {
    this._event = event;
  }

  get electionID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get voterIDs(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }

  get apID(): i32 {
    return this._event.parameters[2].value.toI32();
  }
}

export class VotersRegistered extends ethereum.Event {
  get params(): VotersRegistered__Params {
    return new VotersRegistered__Params(this);
  }
}

export class VotersRegistered__Params {
  _event: VotersRegistered;

  constructor(event: VotersRegistered) {
    this._event = event;
  }

  get electionID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get voterIDs(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }

  get registerID(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get blindedSignature(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get blindedElectionToken(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }
}

export class opnVote__apsResult {
  value0: i32;
  value1: Address;
  value2: string;
  value3: string;

  constructor(value0: i32, value1: Address, value2: string, value3: string) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    return map;
  }

  getId(): i32 {
    return this.value0;
  }

  getOwner(): Address {
    return this.value1;
  }

  getApName(): string {
    return this.value2;
  }

  getApURI(): string {
    return this.value3;
  }
}

export class opnVote__electionsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: i32;
  value7: i32;
  value8: i32;
  value9: i32;
  value10: i32;
  value11: string;
  value12: string;
  value13: string;
  value14: Bytes;
  value15: Bytes;
  value16: Bytes;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: i32,
    value7: i32,
    value8: i32,
    value9: i32,
    value10: i32,
    value11: string,
    value12: string,
    value13: string,
    value14: Bytes,
    value15: Bytes,
    value16: Bytes
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
    this.value11 = value11;
    this.value12 = value12;
    this.value13 = value13;
    this.value14 = value14;
    this.value15 = value15;
    this.value16 = value16;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set(
      "value6",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value6))
    );
    map.set(
      "value7",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value7))
    );
    map.set(
      "value8",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value8))
    );
    map.set(
      "value9",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value9))
    );
    map.set(
      "value10",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value10))
    );
    map.set("value11", ethereum.Value.fromString(this.value11));
    map.set("value12", ethereum.Value.fromString(this.value12));
    map.set("value13", ethereum.Value.fromString(this.value13));
    map.set("value14", ethereum.Value.fromBytes(this.value14));
    map.set("value15", ethereum.Value.fromBytes(this.value15));
    map.set("value16", ethereum.Value.fromBytes(this.value16));
    return map;
  }

  getElectionID(): BigInt {
    return this.value0;
  }

  getStartTime(): BigInt {
    return this.value1;
  }

  getEndTime(): BigInt {
    return this.value2;
  }

  getTotalVotes(): BigInt {
    return this.value3;
  }

  getTotalAuthorized(): BigInt {
    return this.value4;
  }

  getTotalRegistered(): BigInt {
    return this.value5;
  }

  getRegisterID(): i32 {
    return this.value6;
  }

  getAuthProviderId(): i32 {
    return this.value7;
  }

  getSvsId(): i32 {
    return this.value8;
  }

  getBallotLength(): i32 {
    return this.value9;
  }

  getStatus(): i32 {
    return this.value10;
  }

  getBallotIPFSHash(): string {
    return this.value11;
  }

  getCancelReasonIPFSHash(): string {
    return this.value12;
  }

  getDescriptionIPFSHash(): string {
    return this.value13;
  }

  getPublicKey(): Bytes {
    return this.value14;
  }

  getPrivateKey(): Bytes {
    return this.value15;
  }

  getRegisterPubKey(): Bytes {
    return this.value16;
  }
}

export class opnVote__registersResult {
  value0: i32;
  value1: Address;
  value2: string;
  value3: string;

  constructor(value0: i32, value1: Address, value2: string, value3: string) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    return map;
  }

  getId(): i32 {
    return this.value0;
  }

  getOwner(): Address {
    return this.value1;
  }

  getRegisterName(): string {
    return this.value2;
  }

  getRegisterURI(): string {
    return this.value3;
  }
}

export class opnVote__svssResult {
  value0: i32;
  value1: Address;
  value2: string;
  value3: string;

  constructor(value0: i32, value1: Address, value2: string, value3: string) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    return map;
  }

  getId(): i32 {
    return this.value0;
  }

  getOwner(): Address {
    return this.value1;
  }

  getSvsName(): string {
    return this.value2;
  }

  getSvsURI(): string {
    return this.value3;
  }
}

export class opnVote extends ethereum.SmartContract {
  static bind(address: Address): opnVote {
    return new opnVote("opnVote", address);
  }

  aps(param0: i32): opnVote__apsResult {
    let result = super.call("aps", "aps(uint8):(uint8,address,string,string)", [
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))
    ]);

    return new opnVote__apsResult(
      result[0].toI32(),
      result[1].toAddress(),
      result[2].toString(),
      result[3].toString()
    );
  }

  try_aps(param0: i32): ethereum.CallResult<opnVote__apsResult> {
    let result = super.tryCall(
      "aps",
      "aps(uint8):(uint8,address,string,string)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new opnVote__apsResult(
        value[0].toI32(),
        value[1].toAddress(),
        value[2].toString(),
        value[3].toString()
      )
    );
  }

  createElection(
    startTime: BigInt,
    endTime: BigInt,
    registerID: i32,
    authProviderId: i32,
    svsId: i32,
    ballotLength: i32,
    descriptionIPFSHash: string,
    ballotIPFSHash: string,
    publicKey: Bytes
  ): BigInt {
    let result = super.call(
      "createElection",
      "createElection(uint256,uint256,uint8,uint8,uint8,uint8,string,string,bytes):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(startTime),
        ethereum.Value.fromUnsignedBigInt(endTime),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(registerID)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(authProviderId)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(svsId)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(ballotLength)),
        ethereum.Value.fromString(descriptionIPFSHash),
        ethereum.Value.fromString(ballotIPFSHash),
        ethereum.Value.fromBytes(publicKey)
      ]
    );

    return result[0].toBigInt();
  }

  try_createElection(
    startTime: BigInt,
    endTime: BigInt,
    registerID: i32,
    authProviderId: i32,
    svsId: i32,
    ballotLength: i32,
    descriptionIPFSHash: string,
    ballotIPFSHash: string,
    publicKey: Bytes
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createElection",
      "createElection(uint256,uint256,uint8,uint8,uint8,uint8,string,string,bytes):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(startTime),
        ethereum.Value.fromUnsignedBigInt(endTime),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(registerID)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(authProviderId)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(svsId)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(ballotLength)),
        ethereum.Value.fromString(descriptionIPFSHash),
        ethereum.Value.fromString(ballotIPFSHash),
        ethereum.Value.fromBytes(publicKey)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  elections(param0: BigInt): opnVote__electionsResult {
    let result = super.call(
      "elections",
      "elections(uint256):(uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,uint8,uint8,uint8,string,string,string,bytes,bytes,bytes)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new opnVote__electionsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toI32(),
      result[7].toI32(),
      result[8].toI32(),
      result[9].toI32(),
      result[10].toI32(),
      result[11].toString(),
      result[12].toString(),
      result[13].toString(),
      result[14].toBytes(),
      result[15].toBytes(),
      result[16].toBytes()
    );
  }

  try_elections(param0: BigInt): ethereum.CallResult<opnVote__electionsResult> {
    let result = super.tryCall(
      "elections",
      "elections(uint256):(uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,uint8,uint8,uint8,string,string,string,bytes,bytes,bytes)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new opnVote__electionsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toI32(),
        value[7].toI32(),
        value[8].toI32(),
        value[9].toI32(),
        value[10].toI32(),
        value[11].toString(),
        value[12].toString(),
        value[13].toString(),
        value[14].toBytes(),
        value[15].toBytes(),
        value[16].toBytes()
      )
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  registers(param0: i32): opnVote__registersResult {
    let result = super.call(
      "registers",
      "registers(uint8):(uint8,address,string,string)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))]
    );

    return new opnVote__registersResult(
      result[0].toI32(),
      result[1].toAddress(),
      result[2].toString(),
      result[3].toString()
    );
  }

  try_registers(param0: i32): ethereum.CallResult<opnVote__registersResult> {
    let result = super.tryCall(
      "registers",
      "registers(uint8):(uint8,address,string,string)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new opnVote__registersResult(
        value[0].toI32(),
        value[1].toAddress(),
        value[2].toString(),
        value[3].toString()
      )
    );
  }

  svss(param0: i32): opnVote__svssResult {
    let result = super.call(
      "svss",
      "svss(uint8):(uint8,address,string,string)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))]
    );

    return new opnVote__svssResult(
      result[0].toI32(),
      result[1].toAddress(),
      result[2].toString(),
      result[3].toString()
    );
  }

  try_svss(param0: i32): ethereum.CallResult<opnVote__svssResult> {
    let result = super.tryCall(
      "svss",
      "svss(uint8):(uint8,address,string,string)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new opnVote__svssResult(
        value[0].toI32(),
        value[1].toAddress(),
        value[2].toString(),
        value[3].toString()
      )
    );
  }
}

export class AddAPCall extends ethereum.Call {
  get inputs(): AddAPCall__Inputs {
    return new AddAPCall__Inputs(this);
  }

  get outputs(): AddAPCall__Outputs {
    return new AddAPCall__Outputs(this);
  }
}

export class AddAPCall__Inputs {
  _call: AddAPCall;

  constructor(call: AddAPCall) {
    this._call = call;
  }

  get newAP(): AddAPCallNewAPStruct {
    return changetype<AddAPCallNewAPStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class AddAPCall__Outputs {
  _call: AddAPCall;

  constructor(call: AddAPCall) {
    this._call = call;
  }
}

export class AddAPCallNewAPStruct extends ethereum.Tuple {
  get id(): i32 {
    return this[0].toI32();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get apName(): string {
    return this[2].toString();
  }

  get apURI(): string {
    return this[3].toString();
  }
}

export class AddRegisterCall extends ethereum.Call {
  get inputs(): AddRegisterCall__Inputs {
    return new AddRegisterCall__Inputs(this);
  }

  get outputs(): AddRegisterCall__Outputs {
    return new AddRegisterCall__Outputs(this);
  }
}

export class AddRegisterCall__Inputs {
  _call: AddRegisterCall;

  constructor(call: AddRegisterCall) {
    this._call = call;
  }

  get newRegister(): AddRegisterCallNewRegisterStruct {
    return changetype<AddRegisterCallNewRegisterStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class AddRegisterCall__Outputs {
  _call: AddRegisterCall;

  constructor(call: AddRegisterCall) {
    this._call = call;
  }
}

export class AddRegisterCallNewRegisterStruct extends ethereum.Tuple {
  get id(): i32 {
    return this[0].toI32();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get registerName(): string {
    return this[2].toString();
  }

  get registerURI(): string {
    return this[3].toString();
  }
}

export class AddSVSCall extends ethereum.Call {
  get inputs(): AddSVSCall__Inputs {
    return new AddSVSCall__Inputs(this);
  }

  get outputs(): AddSVSCall__Outputs {
    return new AddSVSCall__Outputs(this);
  }
}

export class AddSVSCall__Inputs {
  _call: AddSVSCall;

  constructor(call: AddSVSCall) {
    this._call = call;
  }

  get newSVS(): AddSVSCallNewSVSStruct {
    return changetype<AddSVSCallNewSVSStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class AddSVSCall__Outputs {
  _call: AddSVSCall;

  constructor(call: AddSVSCall) {
    this._call = call;
  }
}

export class AddSVSCallNewSVSStruct extends ethereum.Tuple {
  get id(): i32 {
    return this[0].toI32();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get svsName(): string {
    return this[2].toString();
  }

  get svsURI(): string {
    return this[3].toString();
  }
}

export class AuthorizeVoterCall extends ethereum.Call {
  get inputs(): AuthorizeVoterCall__Inputs {
    return new AuthorizeVoterCall__Inputs(this);
  }

  get outputs(): AuthorizeVoterCall__Outputs {
    return new AuthorizeVoterCall__Outputs(this);
  }
}

export class AuthorizeVoterCall__Inputs {
  _call: AuthorizeVoterCall;

  constructor(call: AuthorizeVoterCall) {
    this._call = call;
  }

  get electionID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get voterID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AuthorizeVoterCall__Outputs {
  _call: AuthorizeVoterCall;

  constructor(call: AuthorizeVoterCall) {
    this._call = call;
  }
}

export class AuthorizeVotersCall extends ethereum.Call {
  get inputs(): AuthorizeVotersCall__Inputs {
    return new AuthorizeVotersCall__Inputs(this);
  }

  get outputs(): AuthorizeVotersCall__Outputs {
    return new AuthorizeVotersCall__Outputs(this);
  }
}

export class AuthorizeVotersCall__Inputs {
  _call: AuthorizeVotersCall;

  constructor(call: AuthorizeVotersCall) {
    this._call = call;
  }

  get electionID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get voterIDs(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class AuthorizeVotersCall__Outputs {
  _call: AuthorizeVotersCall;

  constructor(call: AuthorizeVotersCall) {
    this._call = call;
  }
}

export class CancelElectionCall extends ethereum.Call {
  get inputs(): CancelElectionCall__Inputs {
    return new CancelElectionCall__Inputs(this);
  }

  get outputs(): CancelElectionCall__Outputs {
    return new CancelElectionCall__Outputs(this);
  }
}

export class CancelElectionCall__Inputs {
  _call: CancelElectionCall;

  constructor(call: CancelElectionCall) {
    this._call = call;
  }

  get electionID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get cancelReasonIPFSHash(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class CancelElectionCall__Outputs {
  _call: CancelElectionCall;

  constructor(call: CancelElectionCall) {
    this._call = call;
  }
}

export class CreateElectionCall extends ethereum.Call {
  get inputs(): CreateElectionCall__Inputs {
    return new CreateElectionCall__Inputs(this);
  }

  get outputs(): CreateElectionCall__Outputs {
    return new CreateElectionCall__Outputs(this);
  }
}

export class CreateElectionCall__Inputs {
  _call: CreateElectionCall;

  constructor(call: CreateElectionCall) {
    this._call = call;
  }

  get startTime(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get endTime(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get registerID(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get authProviderId(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get svsId(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get ballotLength(): i32 {
    return this._call.inputValues[5].value.toI32();
  }

  get descriptionIPFSHash(): string {
    return this._call.inputValues[6].value.toString();
  }

  get ballotIPFSHash(): string {
    return this._call.inputValues[7].value.toString();
  }

  get publicKey(): Bytes {
    return this._call.inputValues[8].value.toBytes();
  }
}

export class CreateElectionCall__Outputs {
  _call: CreateElectionCall;

  constructor(call: CreateElectionCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class EndElectionCall extends ethereum.Call {
  get inputs(): EndElectionCall__Inputs {
    return new EndElectionCall__Inputs(this);
  }

  get outputs(): EndElectionCall__Outputs {
    return new EndElectionCall__Outputs(this);
  }
}

export class EndElectionCall__Inputs {
  _call: EndElectionCall;

  constructor(call: EndElectionCall) {
    this._call = call;
  }

  get electionID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class EndElectionCall__Outputs {
  _call: EndElectionCall;

  constructor(call: EndElectionCall) {
    this._call = call;
  }
}

export class PublishElectionResultsCall extends ethereum.Call {
  get inputs(): PublishElectionResultsCall__Inputs {
    return new PublishElectionResultsCall__Inputs(this);
  }

  get outputs(): PublishElectionResultsCall__Outputs {
    return new PublishElectionResultsCall__Outputs(this);
  }
}

export class PublishElectionResultsCall__Inputs {
  _call: PublishElectionResultsCall;

  constructor(call: PublishElectionResultsCall) {
    this._call = call;
  }

  get electionID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get yesVotes(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get noVotes(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get invalidVotes(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get privateKey(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class PublishElectionResultsCall__Outputs {
  _call: PublishElectionResultsCall;

  constructor(call: PublishElectionResultsCall) {
    this._call = call;
  }
}

export class RegisterVoterCall extends ethereum.Call {
  get inputs(): RegisterVoterCall__Inputs {
    return new RegisterVoterCall__Inputs(this);
  }

  get outputs(): RegisterVoterCall__Outputs {
    return new RegisterVoterCall__Outputs(this);
  }
}

export class RegisterVoterCall__Inputs {
  _call: RegisterVoterCall;

  constructor(call: RegisterVoterCall) {
    this._call = call;
  }

  get electionID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get voterID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get blindedSignature(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get blindedElectionToken(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class RegisterVoterCall__Outputs {
  _call: RegisterVoterCall;

  constructor(call: RegisterVoterCall) {
    this._call = call;
  }
}

export class RegisterVotersCall extends ethereum.Call {
  get inputs(): RegisterVotersCall__Inputs {
    return new RegisterVotersCall__Inputs(this);
  }

  get outputs(): RegisterVotersCall__Outputs {
    return new RegisterVotersCall__Outputs(this);
  }
}

export class RegisterVotersCall__Inputs {
  _call: RegisterVotersCall;

  constructor(call: RegisterVotersCall) {
    this._call = call;
  }

  get electionID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get voterIDs(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get blindedSignature(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get blindedElectionToken(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class RegisterVotersCall__Outputs {
  _call: RegisterVotersCall;

  constructor(call: RegisterVotersCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetElectionRegisterKeyCall extends ethereum.Call {
  get inputs(): SetElectionRegisterKeyCall__Inputs {
    return new SetElectionRegisterKeyCall__Inputs(this);
  }

  get outputs(): SetElectionRegisterKeyCall__Outputs {
    return new SetElectionRegisterKeyCall__Outputs(this);
  }
}

export class SetElectionRegisterKeyCall__Inputs {
  _call: SetElectionRegisterKeyCall;

  constructor(call: SetElectionRegisterKeyCall) {
    this._call = call;
  }

  get electionID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get registerKey(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SetElectionRegisterKeyCall__Outputs {
  _call: SetElectionRegisterKeyCall;

  constructor(call: SetElectionRegisterKeyCall) {
    this._call = call;
  }
}

export class StartElectionCall extends ethereum.Call {
  get inputs(): StartElectionCall__Inputs {
    return new StartElectionCall__Inputs(this);
  }

  get outputs(): StartElectionCall__Outputs {
    return new StartElectionCall__Outputs(this);
  }
}

export class StartElectionCall__Inputs {
  _call: StartElectionCall;

  constructor(call: StartElectionCall) {
    this._call = call;
  }

  get electionID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class StartElectionCall__Outputs {
  _call: StartElectionCall;

  constructor(call: StartElectionCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class VoteCall extends ethereum.Call {
  get inputs(): VoteCall__Inputs {
    return new VoteCall__Inputs(this);
  }

  get outputs(): VoteCall__Outputs {
    return new VoteCall__Outputs(this);
  }
}

export class VoteCall__Inputs {
  _call: VoteCall;

  constructor(call: VoteCall) {
    this._call = call;
  }

  get electionID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get voter(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get svsSignature(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get vote_encrypted(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get unblindedElectionToken(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get unblindedSignature(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class VoteCall__Outputs {
  _call: VoteCall;

  constructor(call: VoteCall) {
    this._call = call;
  }
}
